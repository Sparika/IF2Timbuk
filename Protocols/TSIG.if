%% IF specification of /home/avispa/web-interface-computation/./tempdir/workfileDhYVrL

section signature:

state_server: agent * agent * symmetric_key * hash_func * text * text * text * nat * text * text * text * nat -> fact
state_client: agent * agent * symmetric_key * hash_func * text * text * text * nat * text * text * text * nat -> fact


section types:

client_server_k_ba, server_client_k_ab: protocol_id
MGoal, start: message
12, 10, 7, State, 6, 4, SID, Dummy_State, 3, 2, 1, 0: nat
N1, M1, N2, Dummy_M1, Tag1, Tag2, Dummy_M2, M2, Dummy_N2, Dummy_N1, dummy_nonce, m1, m2, mi1, mi2, tag1, tag2: text
H, h: hash_func
K, kia, kis, kas: symmetric_key
A, S, A2Goal, A1Goal, a, s, i: agent


section inits:

initial_state init1 := 
 iknows(start).
 iknows(a).
 iknows(s).
 iknows(h).
 iknows(kia).
 iknows(kis).
 iknows(mi1).
 iknows(i).
 state_client(a,s,kas,h,m1,tag1,tag2,0,dummy_nonce,dummy_nonce,dummy_nonce,3).
 state_server(s,a,kas,h,m2,tag1,tag2,0,dummy_nonce,dummy_nonce,dummy_nonce,4).
 state_client(a,s,kas,h,m1,tag1,tag2,0,dummy_nonce,dummy_nonce,dummy_nonce,6).
 state_server(s,a,kas,h,m2,tag1,tag2,0,dummy_nonce,dummy_nonce,dummy_nonce,7).
 state_server(s,i,kis,h,m2,tag1,tag2,0,dummy_nonce,dummy_nonce,dummy_nonce,10).
 state_client(a,i,kia,h,m1,tag1,tag2,0,dummy_nonce,dummy_nonce,dummy_nonce,12)


section rules:

step step_0 (A,S,K,H,M1,Tag1,Tag2,Dummy_N1,N2,M2,SID,N1) :=
 state_client(A,S,K,H,M1,Tag1,Tag2,0,Dummy_N1,N2,M2,SID).
 iknows(start)
=[exists N1]=>
 state_client(A,S,K,H,M1,Tag1,Tag2,1,N1,N2,M2,SID).
 iknows(pair(Tag1,pair(M1,scrypt(K,pair(apply(H,pair(Tag1,M1)),N1))))).
 witness(A,S,server_client_k_ab,pair(Tag1,pair(M1,scrypt(K,pair(apply(H,pair(Tag1,M1)),N1)))))

step step_1 (A,S,K,H,M1,Tag1,Tag2,N1,Dummy_N2,Dummy_M2,SID,N2,M2) :=
 state_client(A,S,K,H,M1,Tag1,Tag2,1,N1,Dummy_N2,Dummy_M2,SID).
 iknows(pair(Tag2,pair(M1,pair(M2,scrypt(K,pair(apply(H,pair(Tag2,pair(M1,M2))),N2))))))
 =>
 state_client(A,S,K,H,M1,Tag1,Tag2,2,N1,N2,M2,SID).
 wrequest(A,S,client_server_k_ba,pair(Tag2,pair(M1,pair(M2,scrypt(K,pair(apply(H,pair(Tag2,pair(M1,M2))),N2))))),SID)

step step_2 (S,A,K,H,M2,Tag1,Tag2,Dummy_N1,Dummy_M1,Dummy_N2,SID,N1,M1,N2) :=
 state_server(S,A,K,H,M2,Tag1,Tag2,0,Dummy_N1,Dummy_M1,Dummy_N2,SID).
 iknows(pair(Tag1,pair(M1,scrypt(K,pair(apply(H,pair(Tag1,M1)),N1)))))
=[exists N2]=>
 state_server(S,A,K,H,M2,Tag1,Tag2,1,N1,M1,N2,SID).
 iknows(pair(Tag2,pair(M1,pair(M2,scrypt(K,pair(apply(H,pair(Tag2,pair(M1,M2))),N2)))))).
 witness(S,A,client_server_k_ba,pair(Tag2,pair(M1,pair(M2,scrypt(K,pair(apply(H,pair(Tag2,pair(M1,M2))),N2)))))).
 wrequest(S,A,server_client_k_ab,pair(Tag1,pair(M1,scrypt(K,pair(apply(H,pair(Tag1,M1)),N1)))),SID)


section properties:

property weak_authentication_on_server_client_k_ab (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,server_client_k_ab,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,server_client_k_ab,MGoal))

property weak_authentication_on_client_server_k_ba (A1Goal,A2Goal,MGoal,SID) :=
 [] ((wrequest(A1Goal,A2Goal,client_server_k_ba,MGoal,SID)
      /\ ~ equal(A2Goal,i))
     => witness(A2Goal,A1Goal,client_server_k_ba,MGoal))


section attack_states:

attack_state weak_authentication_on_server_client_k_ab (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,server_client_k_ab,MGoal,SID) &
 not(witness(A2Goal,A1Goal,server_client_k_ab,MGoal)) &
 not(equal(A2Goal,i))

attack_state weak_authentication_on_client_server_k_ba (A1Goal,A2Goal,MGoal,SID) :=
 wrequest(A1Goal,A2Goal,client_server_k_ba,MGoal,SID) &
 not(witness(A2Goal,A1Goal,client_server_k_ba,MGoal)) &
 not(equal(A2Goal,i))

      
